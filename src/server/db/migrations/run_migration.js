const fs = require('fs');
const path = require('path');
const setupDatabase = require('../lib/postgresql');

async function runMigration() {
  try {
    console.log('üîÑ Iniciando migraci√≥n de la tabla type_news...');
    
    // Usar la configuraci√≥n del proyecto
    const config = {
      host: 'localhost',
      port: 5432,
      database: 'integra_db', // Nombre correcto de la base de datos
      username: 'postgres',
      password: '1234', // Contrase√±a correcta de PostgreSQL
      dialect: 'postgres'
    };

    console.log('üîß Configuraci√≥n de BD:', {
      host: config.host,
      port: config.port,
      database: config.database,
      username: config.username
    });

    const sequelize = setupDatabase(config);
    
    // Probar conexi√≥n
    await sequelize.authenticate();
    console.log('‚úÖ Conexi√≥n a la base de datos establecida');

    // Leer el script SQL de migraci√≥n
    const migrationPath = path.join(__dirname, 'update_type_news_table.sql');
    const migrationSQL = fs.readFileSync(migrationPath, 'utf8');

    // Ejecutar la migraci√≥n
    console.log('üìù Ejecutando migraci√≥n...');
    await sequelize.query(migrationSQL);
    
    console.log('‚úÖ Migraci√≥n completada exitosamente');
    console.log('üéâ La tabla type_news ha sido actualizada');
    
    // Verificar la estructura actualizada
    const [results] = await sequelize.query(`
      SELECT column_name, data_type, is_nullable, column_default 
      FROM information_schema.columns 
      WHERE table_name = 'type_news' 
      ORDER BY ordinal_position
    `);
    
    console.log('\nüìä Estructura actualizada de la tabla type_news:');
    console.table(results);
    
    await sequelize.close();
    
  } catch (error) {
    console.error('‚ùå Error durante la migraci√≥n:', error);
    
    if (error.message.includes('password')) {
      console.log('\nüí° Soluci√≥n: Actualiza la contrase√±a en el archivo run_migration.js');
      console.log('   Cambia la l√≠nea: password: "postgres" por tu contrase√±a real');
    }
    
    process.exit(1);
  }
}

// Ejecutar la migraci√≥n si se llama directamente
if (require.main === module) {
  runMigration();
}

module.exports = runMigration; 